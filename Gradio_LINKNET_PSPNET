{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":27000,"status":"ok","timestamp":1685674193389,"user":{"displayName":"Nikita Shetty","userId":"04945818227376583304"},"user_tz":-330},"id":"bi9EMKqHyGOP","outputId":"1e3a2429-1a84-4229-d889-67ff16f7a918"},"outputs":[{"name":"stdout","output_type":"stream","text":["\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m20.0/20.0 MB\u001b[0m \u001b[31m51.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.0/1.0 MB\u001b[0m \u001b[31m61.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m57.0/57.0 kB\u001b[0m \u001b[31m6.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m288.1/288.1 kB\u001b[0m \u001b[31m25.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m75.4/75.4 kB\u001b[0m \u001b[31m8.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m236.8/236.8 kB\u001b[0m \u001b[31m21.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m50.5/50.5 kB\u001b[0m \u001b[31m2.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m137.0/137.0 kB\u001b[0m \u001b[31m10.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m45.7/45.7 kB\u001b[0m \u001b[31m4.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m58.3/58.3 kB\u001b[0m \u001b[31m6.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m129.9/129.9 kB\u001b[0m \u001b[31m7.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m58.3/58.3 kB\u001b[0m \u001b[31m4.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m114.5/114.5 kB\u001b[0m \u001b[31m6.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m268.8/268.8 kB\u001b[0m \u001b[31m19.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m149.6/149.6 kB\u001b[0m \u001b[31m15.2 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m67.0/67.0 kB\u001b[0m \u001b[31m7.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m72.5/72.5 kB\u001b[0m \u001b[31m8.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Building wheel for ffmpy (setup.py) ... \u001b[?25l\u001b[?25hdone\n"]}],"source":["!pip install -q gradio"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7555,"status":"ok","timestamp":1685674200936,"user":{"displayName":"Nikita Shetty","userId":"04945818227376583304"},"user_tz":-330},"id":"HnMgXAftL3Js","outputId":"4defa109-6f00-4050-f717-2edb58946924"},"outputs":[{"name":"stdout","output_type":"stream","text":["\u001b[?25l     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m0.0/50.7 kB\u001b[0m \u001b[31m?\u001b[0m eta \u001b[36m-:--:--\u001b[0m\r\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m50.7/50.7 kB\u001b[0m \u001b[31m5.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h"]}],"source":["!pip install -U -q segmentation_models\n","import os\n","os.environ[\"SM_FRAMEWORK\"] = \"tf.keras\""]},{"cell_type":"code","execution_count":null,"metadata":{"id":"KDBVZhjqyIK-"},"outputs":[],"source":["import gradio as gr\n","import PIL"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":81355,"status":"ok","timestamp":1685674284199,"user":{"displayName":"Nikita Shetty","userId":"04945818227376583304"},"user_tz":-330},"id":"eMXc6_4TyKMB","outputId":"cd45e89a-6393-42ba-8256-6be52f6217cb"},"outputs":[{"name":"stdout","output_type":"stream","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4074,"status":"ok","timestamp":1685674288267,"user":{"displayName":"Nikita Shetty","userId":"04945818227376583304"},"user_tz":-330},"id":"uwAjO9Vzn3nR","outputId":"1a99ef55-b7d6-4f9f-9b73-07c46a28e673"},"outputs":[{"name":"stdout","output_type":"stream","text":["Segmentation Models: using `tf.keras` framework.\n"]}],"source":["from tensorflow.keras.models import load_model\n","import segmentation_models as sm\n","import matplotlib.pyplot as plt\n","import tensorflow as tf\n","import numpy as np\n","import cv2"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"H0D51jwm0ZDf"},"outputs":[],"source":["lr=1e-5\n","\n","iou_score = [sm.metrics.IOUScore(threshold=0.5)]\n","\n","# Load the segmentation model\n","model1 = load_model('/content/drive/MyDrive/LinkNet.h5', compile=False, custom_objects = {'iou_score':iou_score})\n","model1.compile(optimizer = tf.keras.optimizers.Adam(lr),\n","              loss='categorical_crossentropy', metrics=[iou_score],)\n","\n","model2 = load_model('/content/drive/MyDrive/PSPNet.h5', compile=False, custom_objects = {'iou_score':iou_score})\n","model2.compile(optimizer = tf.keras.optimizers.Adam(lr),\n","              loss='categorical_crossentropy', metrics=[iou_score],)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Rr03VneYyTf2"},"outputs":[],"source":["class_names = ['urban_land', 'agriculture_land', 'rangeland', 'forest_land', 'water','barren_land','unknown']"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":988,"status":"ok","timestamp":1685674306547,"user":{"displayName":"Nikita Shetty","userId":"04945818227376583304"},"user_tz":-330},"id":"_PHBji3Fmmku","outputId":"ba78ab8b-1229-48f7-d772-b6bb098d1500"},"outputs":[{"name":"stderr","output_type":"stream","text":["/usr/local/lib/python3.10/dist-packages/gradio/inputs.py:259: UserWarning: Usage of gradio.inputs is deprecated, and will not be supported in the future, please import your component from gradio.components\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/gradio/inputs.py:262: UserWarning: `optional` parameter is deprecated, and it has no effect\n","  super().__init__(\n","/usr/local/lib/python3.10/dist-packages/gradio/outputs.py:197: UserWarning: Usage of gradio.outputs is deprecated, and will not be supported in the future, please import your components from gradio.components\n","  warnings.warn(\n","/usr/local/lib/python3.10/dist-packages/gradio/outputs.py:200: UserWarning: The 'type' parameter has been deprecated. Use the Number component instead.\n","  super().__init__(num_top_classes=num_top_classes, type=type, label=label)\n"]}],"source":["def psp(img):\n","  img_2=img.reshape(-1,288, 288, 3)\n","  prediction=model1.predict(img_2).flatten()\n","  return {class_names[i]: float(prediction[i]) for i in range(7)}\n","iface1 = gr.Interface(fn=psp, inputs = gr.inputs.Image(shape = (288, 288)),\toutputs = gr.outputs.Label(num_top_classes=7), title=\"Linknet\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SkQIkhmI4muS"},"outputs":[],"source":["def Linknet(img):\n","  img_1=img.reshape(-1, 288, 288, 3)\n","  prediction=model2.predict(img_1).flatten()\n","  return {class_names[i]: float(prediction[i]) for i in range(7)}\n","iface2 = gr.Interface(fn=Linknet, inputs = gr.inputs.Image(shape = (288, 288)),\toutputs = gr.outputs.Label(num_top_classes=7), title=\"PSPnet\")"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/","height":626},"id":"2R6zgo2DTNzN"},"outputs":[{"name":"stdout","output_type":"stream","text":["Colab notebook detected. This cell will run indefinitely so that you can see errors and logs. To turn off, set debug=False in launch().\n","Running on public URL: https://5b9f27bf0c818cfee1.gradio.live\n","\n","This share link expires in 72 hours. For free permanent hosting and GPU upgrades, run `gradio deploy` from Terminal to deploy to Spaces (https://huggingface.co/spaces)\n"]},{"data":{"text/html":["\u003cdiv\u003e\u003ciframe src=\"https://5b9f27bf0c818cfee1.gradio.live\" width=\"100%\" height=\"500\" allow=\"autoplay; camera; microphone; clipboard-read; clipboard-write;\" frameborder=\"0\" allowfullscreen\u003e\u003c/iframe\u003e\u003c/div\u003e"],"text/plain":["\u003cIPython.core.display.HTML object\u003e"]},"metadata":{},"output_type":"display_data"},{"name":"stdout","output_type":"stream","text":["1/1 [==============================] - 2s 2s/step\n","1/1 [==============================] - 4s 4s/step\n"]}],"source":["# Combine both interfaces into a single Parallel interface\n","gr.Parallel(iface1, iface2, title=\"Land Segmentation: LinkNet v/s PSPNet  \", description=\"\"\"Segment land from an image using a deep learning model.\"\"\").launch(share=True, debug=True)"]}],"metadata":{"colab":{"name":"","provenance":[{"file_id":"1qCoRHr-EC177jhYbrTpBj7D7RbbchdSK","timestamp":1684999809366}],"version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}